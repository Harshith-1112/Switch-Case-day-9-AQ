Day-9

22/10/2025

Switch Case:

if several options are available then it is not recommended to use if-else we should go for switch statement. because it improves readability of the code.


Syntax:

switch(ch){
case 1:
action-1;
break;
case 2:
action-2;
break;
case 3:
action-3;
break;
------
------
case n:
action-n;
break;
default:
}


Note:

until 1.4 version the allow types for the switch argument are byte, short, int, char but from 1.5 version on wards corresponding wrapper classes (Byte, Short, Character, Integer)



ATM Operations:

1. deposit :- must be multiples of 100, >500, update the balance
2. withdraw :- >500, multiples of 100, >balance insufficient funds, else update balance
3. check balance :- o conditions
4. exit :-


Day-9 Assignment Questions
=============================
Q1)Problem Statement:
A library system calculates fines based on days overdue:
â€¢	Code 1: 1â€“5 days â†’ $1/day
â€¢	Code 2: 6â€“10 days â†’ $2/day
â€¢	Code 3: >10 days â†’ $5/day
The user inputs a code and days overdue, and the program outputs the total fine or "Invalid Code".

Input Format:
Two integers: code and days, separated by a space.

Output Format:
An integer (total fine) or the string "Invalid Code

Example
â€¢	Input: 1 3
â€¢	Output: 3

Constraints:
â€¢	1 â‰¤ code â‰¤ 3
â€¢	1 â‰¤ days â‰¤ 30
â€¢	Use a switch statement

Question2)Problem Statement:
A company awards bonuses based on employee role:
â€¢	Role Code 1 (Manager): 10% of salary
â€¢	Role Code 2 (Developer): 5% of salary
â€¢	Role Code 3 (Intern): $500 flat bonus
The user inputs a role code and salary, and the program outputs the bonus amount or "Invalid Role".

Input Format:
Two integers: code and salary, separated by a space.

Output Format:
An integer (bonus amount) or the string "Invalid Role".

Example:
â€¢	Input: 1 50000
â€¢	Output: 5000

Constraints:
â€¢	1 â‰¤ code â‰¤ 3
â€¢	1000 â‰¤ salary â‰¤ 100000
â€¢	Use a switch statement


Question3)Problem Statement:
A hotel system prices rooms based on type and season:
â€¢	Room Types:
o	1: Standard
o	2: Deluxe
â€¢	Seasons:
o	1: Peak
o	2: Off-Peak
â€¢	Prices:
o	Standard Room:
ï‚§	Peak â†’ $100
ï‚§	Off-Peak â†’ $80
o	Deluxe Room:
ï‚§	Peak â†’ $200
ï‚§	Off-Peak â†’ $150

Input Format:
Two integers: room and season, separated by a space.
Output Format:
One of:
"$100", "$80", "$200", "$150", or "Invalid Input"

Example:
â€¢	Input: 1 1
â€¢	Output: $100

Constraints:
â€¢	1 â‰¤ room â‰¤ 2
â€¢	1 â‰¤ season â‰¤ 2
â€¢	Use a switch statement for room type

Question4)QUESTION (Problem Statement)
A tax calculator applies rates based on region:
â€¢	1 for North: 5%
â€¢	2 for South: 6%
â€¢	3 for East: 7%
â€¢	4 for West: 8%
The user provides a region code and income, and the program calculates the tax based on the regionâ€™s percentage rate. If the region code is not between 1 and 4, the output should be "Invalid Region".
 
 Input Format:
Two integers â€” code and income, separated by a space.

 Output Format:
Print an integer (tax amount) or the string "Invalid Region"

 Constraints:
â€¢	1 â‰¤ code â‰¤ 4
â€¢	0 â‰¤ income â‰¤ 1,000,000
â€¢	Use a switch statement


Question5) (Weather Alert System)
A weather app issues alerts based on:
â€¢	Condition code:
.	1 = Sunny
.	2 = Rainy
.	3 = Stormy
â€¢	Temperature (in Â°C):
.	If condition is Stormy and temperature < 10Â°C, print "Severe Warning"
.	Otherwise, print the condition name.
.	If the code is not 1â€“3, print "Invalid Condition".

ðŸ”¹ Input Format:
Two integers:
code (1 to 3) and temp (âˆ’20 to 50), separated by space.

ðŸ”¹ Output Format:
A single string:
"Sunny", "Rainy", "Stormy", "Severe Warning", or "Invalid Condition"

 Example Input:
1 20

Example Output:
Sunny


Question 6)Java Programming Question: Advanced Canteen System
Question:
Problem Statement:
You are tasked with developing an Canteen System for a small canteen that handles ordering and billing. The system should present a menu with options for ordering tea, coffee, and samosas. The user can place orders, view their bill, and check out. The program should:
Display the canteen menu showing the price of each item (tea, coffee, samosas).


Allow the user to order items by selecting the item number (1 for Tea, 2 for Coffee, 3 for Samosa) and entering the quantity.

View the bill that shows:
The total cost of each item ordered.
The subtotal (sum of the cost of all ordered items).
A 5% tax on the subtotal.
The grand total, which includes the subtotal and tax.
Allow the user to checkout and exit the system.
The program should continuously display the menu of options until the user chooses to exit. The switch-case statement should be used to implement the logic for handling different user choices.

Requirements:
Use the switch-case statement for handling different options such as:
Viewing the menu.
Ordering items.
Viewing the bill.
Exiting the system.

Each item in the menu (Tea, Coffee, Samosa) should have a fixed price:
Tea: â‚¹10
Coffee: â‚¹15
Samosa: â‚¹20
The tax rate should be set to 5% of the subtotal.


Item quantity validation:
If the user enters an invalid quantity (less than or equal to 0), display an error message.
If the user selects an invalid item number, display an error message.
If the user selects an option not available in the menu (i.e., any number other than 1, 2, 3, or 4), show an error message.

Once the user selects "Checkout and Exit", print a thank you message and exit the system.


Testcase -1 Order 2 Samosas and View Bill
=========================================
||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 1


--- MENU ---
1. Tea     - â‚¹10
2. Coffee  - â‚¹15
3. Samosa  - â‚¹20


||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 2
Enter item number to order (1-3): 3
Enter quantity: 2
2 Samosa(s) added.


||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 3


--- BILL ---
Samosa x2 = â‚¹40
Subtotal = â‚¹40
Tax (5%) = â‚¹2.0
Total = â‚¹42.0


Test Case 2: Order 3 Teas and View Bill
â€”-----------------------------------------------
||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 2
Enter item number to order (1-3): 1
Enter quantity: 3
3 Tea(s) added.


||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 3


--- BILL ---
Tea x3 = â‚¹30
Subtotal = â‚¹30
Tax (5%) = â‚¹1.5
Total = â‚¹31.5


Test Case 3: Order 2 Coffees + 1 Tea and View Bill
â€”---------------------------------------------------------------
||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 2
Enter item number to order (1-3): 2
Enter quantity: 2
2 Coffee(s) added.


||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 2
Enter item number to order (1-3): 1
Enter quantity: 1
1 Tea(s) added.


||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 3


--- BILL ---
Tea x1 = â‚¹10
Coffee x2 = â‚¹30
Subtotal = â‚¹40
Tax (5%) = â‚¹2.0
Total = â‚¹42.0


Test Case 4: Invalid Quantity (0) and Exit
â€”-----------------------------------------------------
||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 2
Enter item number to order (1-3): 1
Enter quantity: 0
Quantity must be greater than 0.


||=========== CANTEEN MENU ===========||
1. View Menu
2. Order Items
3. View Bill
4. Checkout and Exit
Enter your choice: 4
Thank you! Exiting system







